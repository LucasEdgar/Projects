/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package tela;

import entidade.ItensCompra;
import entidade.Compra;
import entidade.Fornecedor;
import entidade.Produto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import persistencia.HibernateUtil;

/**
 *
 * @author jaimedias
 */
//classe que cria a tela do cadastro de venda.
public class CompraTela extends javax.swing.JDialog {

//instanciando um objeto venda para ser manipulado e persistido no banco de dados
    private Compra compra = new Compra();
    private ItensCompra itensCompra = new ItensCompra();
//lista de vendas para exibir na tela todos os vendas salvos.
    private List<Compra> listaCompras = new ArrayList<>();
    private List<Fornecedor> listaFornecedores = new ArrayList<>();
    private List<Produto> listaProdutos = new ArrayList<>();

    public CompraTela(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//chama o método que vai montar a tabela de vendas e exibir os vendas salvos no banco.
        montaTabela();
//chama o método que valida os campos da tela.
        validaCampos("inicio");
        montaComboFornecedor();
        montaComboProduto();
        montaCarrinho();
        cData.setDate(compra.getDataCompra());
    }

    public void addItem() {

    }

    public void limpaCamposItens() {
        cProduto.setSelectedItem(null);
        cCusto.setText("");
        cQuantidade.setText("");
    }

    public void montaComboFornecedor() {
        listaFornecedores = HibernateUtil.getSession().createQuery("from Fornecedor order by nome").list();
        cFornecedor.removeAllItems();
        for (Fornecedor est : listaFornecedores) {
            cFornecedor.addItem(est.getNome());
        }
    }

    public void montaComboProduto() {
        listaProdutos = HibernateUtil.getSession().createQuery("from Produto order by nome").list();
        cProduto.removeAllItems();
        for (Produto prod : listaProdutos) {
            cProduto.addItem(prod.getNome());
        }
    }

//metodo que vai validar cada componente da tela de acordo com a operação que o usuário deseja realizar.
    public void validaCampos(String operacao) {
//se a tela é o inicio, ou seja, esta abrindo pela primeira vez, vai desabilitar os campos e os botões, permitindo clica apenas nos botões novo e sair.
        if (operacao.equals("inicio")) {
            cData.setEnabled(false);
            cFornecedor.setEnabled(false);
            cProduto.setEnabled(false);
            cCusto.setEnabled(false);
            cQuantidade.setEnabled(false);
            btAdd.setEnabled(false);
            btNovo.setEnabled(true);
            btAlterar.setEnabled(false);
            btExcluir.setEnabled(false);
            btSalvar.setEnabled(false);
            btCancelar.setEnabled(false);
            btSair.setEnabled(true);
// caso a operação seja novo, os campos se comportam diferente, por exemplo, os campos da tela serão habilitados, e os botões de salvar e cancelar também.
        } else if (operacao.equals("novo")) {
            cData.setEnabled(true);
            cFornecedor.setEnabled(true);
            cProduto.setEnabled(true);
            cCusto.setEnabled(true);
            cQuantidade.setEnabled(true);
            btAdd.setEnabled(true);
            btNovo.setEnabled(false);
            btAlterar.setEnabled(false);
            btExcluir.setEnabled(false);
            btSalvar.setEnabled(true);
            btCancelar.setEnabled(true);
            btSair.setEnabled(false);
        } else if (operacao.equals("selecionado")) {
            cData.setEnabled(false);
            cFornecedor.setEnabled(false);
            cProduto.setEnabled(false);
            cCusto.setEnabled(false);
            cQuantidade.setEnabled(false);
            btAdd.setEnabled(false);
            btNovo.setEnabled(true);
            btAlterar.setEnabled(true);
            btExcluir.setEnabled(true);
            btSalvar.setEnabled(false);
            btCancelar.setEnabled(false);
            btSair.setEnabled(true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btSalvar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cFornecedor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cData = new com.toedter.calendar.JDateChooser();
        cCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cTotal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cProduto = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cCusto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cQuantidade = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        carrinho = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Movimento de Compra");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        jLabel2.setText("Código:");

        cFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cFornecedorActionPerformed(evt);
            }
        });

        jLabel5.setText("Data da Compra:");

        jLabel4.setText("Fornecedor:");

        cCodigo.setEditable(false);
        cCodigo.setText(" ");
        cCodigo.setEnabled(false);
        cCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCodigoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel6.setText("Total:");

        cTotal.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        cTotal.setText("R$ 0,00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel6)
                        .addGap(16, 16, 16)
                        .addComponent(cTotal))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cData, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cTotal))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dados da Compra", jPanel1);

        jLabel3.setText("Produto:");

        cProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cProdutoItemStateChanged(evt);
            }
        });
        cProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cProdutoActionPerformed(evt);
            }
        });

        jLabel8.setText("Custo:");

        cCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCustoActionPerformed(evt);
            }
        });

        jLabel9.setText("Quantidade:");

        cQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cQuantidadeActionPerformed(evt);
            }
        });

        btAdd.setText("ADD");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(carrinho);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAdd)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Itens da Compra", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(214, 214, 214)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btAlterar, btCancelar, btExcluir, btNovo, btSair, btSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAlterar)
                    .addComponent(btExcluir)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar)
                    .addComponent(btSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed

        compra.setDataCompra(cData.getDate());
        compra.setFornecedor(listaFornecedores.get(cFornecedor.getSelectedIndex()));

        subirEstoque();

        HibernateUtil.beginTransaction();
        HibernateUtil.getSession().merge(compra);
        HibernateUtil.commitTransaction();
        HibernateUtil.closeSession();

        limparCampos();
        montaTabela();
        validaCampos("inicio");

    }//GEN-LAST:event_btSalvarActionPerformed

    public void subirEstoque() {
        for (ItensCompra it : compra.getItensCompras()) {
            Produto prod = it.getProduto();
            prod.setEstoque(prod.getEstoque() + it.getQuantidade());
            HibernateUtil.beginTransaction();
            HibernateUtil.getSession().merge(prod);
            HibernateUtil.commitTransaction();
            HibernateUtil.closeSession();
        }
    }
//método limpa campos, serve para limpar os campos da interface

    public void limparCampos() {
//seta vazio no campo código da interface
        cCodigo.setText("");
//seta vazio no campo nome da interface
        cData.setDate(null);
//seta vazio no campo sigla da interface
        cFornecedor.setSelectedItem(null);
    }

// metodo do botão novo, serve para iniciar um novo objeto e validar a tela para a operação NOVO.
    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
//instancia um novo objeto venda para ser salvo no banco de dados.
        compra = new Compra();
//limpa os campos para o usuário poder inserir novas informações.
        limparCampos();
// valida os campos da tela para a operação novo.
        validaCampos("novo");
        montaComboFornecedor();
    }//GEN-LAST:event_btNovoActionPerformed

//método que é disparado quando o usuário clica em uma linha da tabela de vendas.
    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
// pega o index da linha selecionada da tabela, e passa por parametro para recuperar um objeto da lista de vendas, este objeto é atribuído ao objeto venda global.       
        compra = listaCompras.get(tabela.getSelectedRow());
//pega o atributo id do objeto e seta o texto do campo código da interface
        cCodigo.setText(compra.getId().toString());
//pega o atributo nome do objeto e seta o texto do campo nome da interface
        cData.setDate(compra.getDataCompra());
//pega o atributo sigla do objeto e seta o texto do campo sigla da interface
        cFornecedor.setSelectedItem(compra.getFornecedor().getNome());
//valida os campos da tela para a operação selecionado, que vai habilitar os botões editar e excluir.        
        validaCampos("selecionado");

    }//GEN-LAST:event_tabelaMouseClicked

// método do botão excluir.
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
// o objeto venda já esta selecionado, ou seja já existe o objeto para ser excluido.
// inicia uma nova transação com o banco de dados
        HibernateUtil.beginTransaction();
//executa um delete do objeto venda selecionado.
        HibernateUtil.getSession().delete(compra);
//commita a transação, ou seja efetiva.
        HibernateUtil.commitTransaction();
// fecha a sessão com o banco de dados.
        HibernateUtil.closeSession();

//chama o método que limpa os campos da tela
        limparCampos();
//        venda = new Venda();
// chama o método monta tabela que vai atualizar a tabela sem o venda deletado.
        montaTabela();
// valida os campos para a operação inicio. 
        validaCampos("inicio");

        // TODO add your handling code here:
    }//GEN-LAST:event_btExcluirActionPerformed

// método do botão sair.
    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
// fecha a tela mas não mata a aplicação.
        dispose();
// Mata a aplicação, para de executar o sistema.
//        System.exit(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btSairActionPerformed

// método do botão cancelar
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
// limpar os campos da tela        
        limparCampos();
//valida os campos para o perfil inicio.
        validaCampos("inicio");
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelarActionPerformed

// método do botão alterar, que vai simplesmente liberar os campos da tela para o usuario editar.
    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
// chama o método valida campos para o perfil novo.
        validaCampos("novo");        // TODO add your handling code here:
    }//GEN-LAST:event_btAlterarActionPerformed

    private void cProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cProdutoActionPerformed

    private void cQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cQuantidadeActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed

        itensCompra.setProduto(listaProdutos.get(cProduto.getSelectedIndex()));
        itensCompra.setCusto(Double.parseDouble(cCusto.getText()));
        itensCompra.setQuantidade(Double.parseDouble(cQuantidade.getText()));
        itensCompra.setCompra(compra);

        Double estoque = listaProdutos.get(cProduto.getSelectedIndex()).getEstoque();
        ItensCompra itemTemp = null;

        for (ItensCompra it : compra.getItensCompras()) {
            if (it.getProduto().getId().equals(itensCompra.getProduto().getId())) {
                itemTemp = it;
                estoque = estoque + it.getQuantidade();
            }
        }

        if ((estoque - itensCompra.getQuantidade()) < 0) {
            JOptionPane.showMessageDialog(null, "Estoque insuficiente! Restam apenas " + estoque + " unidades.");
        } else {
            if (itemTemp == null) {
                compra.getItensCompras().add(itensCompra);  
            } else{
                itemTemp.setQuantidade(itemTemp.getQuantidade() + itensCompra.getQuantidade());
                itemTemp.setCusto(itensCompra.getCusto());
            }

            itensCompra = new ItensCompra();
            montaCarrinho();
            limpaCamposItens();

            cTotal.setText("R$ " + compra.getTotal());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btAddActionPerformed

    private void cProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cProdutoItemStateChanged
        if (cProduto.getSelectedItem() != null) {
            cCusto.setText(listaProdutos.get(
                    cProduto.getSelectedIndex()
            ).getCusto().toString());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_cProdutoItemStateChanged

    private void cCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCodigoActionPerformed

    private void cFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cFornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cFornecedorActionPerformed

    private void cCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCustoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCustoActionPerformed

    public void montaTabela() {
        listaCompras = HibernateUtil.getSession().createQuery("from Compra").list();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Código");
        modelo.addColumn("Data da Compra");
        modelo.addColumn("Fornecedor");
        modelo.addColumn("Total");

        for (Compra co : listaCompras) {
            modelo.addRow(new Object[]{co.getId(), co.getDataCompra(), co.getFornecedor().getNome(), co.getTotal()});
        }
        tabela.setModel(modelo);
    }

    public void montaCarrinho() {

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Produto");
        modelo.addColumn("Custo");
        modelo.addColumn("Quantidade");
        modelo.addColumn("SubTotal");

        for (ItensCompra it : compra.getItensCompras()) {
            modelo.addRow(new Object[]{it.getProduto().getNome(),
                it.getCusto(),
                it.getQuantidade(),
                it.getSubTotal()});
        }
        carrinho.setModel(modelo);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CompraTela dialog = new CompraTela(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSalvar;
    private javax.swing.JTextField cCodigo;
    private javax.swing.JTextField cCusto;
    private com.toedter.calendar.JDateChooser cData;
    private javax.swing.JComboBox<String> cFornecedor;
    private javax.swing.JComboBox<String> cProduto;
    private javax.swing.JTextField cQuantidade;
    private javax.swing.JLabel cTotal;
    private javax.swing.JTable carrinho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
